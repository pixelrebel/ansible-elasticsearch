---

- name: Ensure elasticsearch is started
  service: name={{instance_init_script | basename}} state=started enabled=yes

- name: Wait for elasticsearch to startup
  wait_for: host="{{es_api_host}}" port={% if es_config['http.port'] is defined %}{{es_config['http.port']}}{% else %}{{es_api_port}}{% endif %} delay=10

- name: Gather template files contents
  shell: "cat /etc/elasticsearch/templates/{{ item }}"
  with_items: "{{ es_template_files }}"
  register: es_template_files_contents

- name: Install templates without auth
  uri:
    url: "http://{{es_api_host}}:{% if es_config['http.port'] is defined %}{{es_config['http.port']}}{% else %}{{es_api_port}}{% endif %}/_template/{{ item.item.split('.')[0] }}"
    method: PUT
    status_code: 200
    body_format: json
    body: "{{ item.stdout }}"
  environment: 
    - no_proxy: 127.0.0.1,localhost
  when: not es_enable_xpack or not es_xpack_features is defined or not '"shield" in es_xpack_features'
  with_items: "{{ es_template_files_contents.results }}"

- name: Install templates with auth
  uri:
    url: "http://{{es_api_host}}:{% if es_config['http.port'] is defined %}{{es_config['http.port']}}{% else %}{{es_api_port}}{% endif %}/_template/{{ item.item.split('.')[0] }}"
    method: PUT
    status_code: 200
    user: "{{es_api_basic_auth_username}}"
    password: "{{es_api_basic_auth_password}}"
    force_basic_auth: yes
    body_format: json
    body: "{{ item.stdout }}"
  environment: 
    - no_proxy: 127.0.0.1,localhost
  when: es_enable_xpack and es_xpack_features is defined and '"shield" in es_xpack_features'
  with_items: "{{ es_template_files_contents.results }}"
